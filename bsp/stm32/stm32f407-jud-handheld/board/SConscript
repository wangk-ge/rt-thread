import os
import rtconfig
from building import *

Import('SDK_LIB')

cwd = GetCurrentDir()

# add general drivers
src = Split('''
board.c
ports/spi_oled_init.c
CubeMX_Config/Src/stm32f4xx_hal_msp.c
''')

if GetDepend(['BSP_USING_AD7730']):
    src += Glob('ports/ad7730.c')
	
if GetDepend(['BSP_USING_RSCDRRM020NDSE3']):
    src += Glob('ports/rscdrrm020ndse3.c')
    src += Glob('ports/Pressure_Comp.c')
    src += Glob('ports/crc.c')
	
if GetDepend(['BSP_USING_BME280_SENSOR']):
	src += Glob('ports/bme280_port.c')
	
path =  [cwd]
path += [cwd + '/CubeMX_Config/Inc']
path += [cwd + '/ports']

startup_path_prefix = SDK_LIB

if rtconfig.CROSS_TOOL == 'gcc':
    src += [startup_path_prefix + '/STM32F4xx_HAL/CMSIS/Device/ST/STM32F4xx/Source/Templates/gcc/startup_stm32f407xx.s']
elif rtconfig.CROSS_TOOL == 'keil':
    src += [startup_path_prefix + '/STM32F4xx_HAL/CMSIS/Device/ST/STM32F4xx/Source/Templates/arm/startup_stm32f407xx.s']
elif rtconfig.CROSS_TOOL == 'iar':
    src += [startup_path_prefix + '/STM32F4xx_HAL/CMSIS/Device/ST/STM32F4xx/Source/Templates/iar/startup_stm32f407xx.s']

CPPDEFINES = ['STM32F407xx']
group = DefineGroup('Drivers', src, depend = [''], CPPPATH = path, CPPDEFINES = CPPDEFINES)

Return('group')
